
on:
  push:
  #   branches:
  #   - main
  # pull_request:

name: Rust Validation

env:
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  test:
    name: "Test (cargo & wasm-pack)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key:  runner.os−cargo− {{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@nightly
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - run: cargo test
      - run: wasm-pack test --node

  build:
    name: "Build (wasm-pack)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key:  runner.os−cargo− {{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Default build
        run: wasm-pack build
      - run: mv pkg/ build-pkg
      - name: Minified build
        run: wasm-pack build -t web --release --no-typescript --features none -Z build-std=panic_abort,std -Z build-std-features=panic_immediate_abort
      - name: Archive default build
        uses: actions/upload-artifact@v3
        with:
          name: build-default
          path: build-pkg/
      - name: Archive minified build
        uses: actions/upload-artifact@v3
        with:
          name: build-minified
          path: pkg/

  fmt:
    name: "Format (cargo fmt)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key:  runner.os−cargo− {{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: "Clippy (cargo clippy)"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key:  runner.os−cargo− {{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - run: cargo clippy --all-features -- -D warnings
